---
/* Component for rendering the main navigation with theme toggle.
 *
 * Props:
 * - links: NavEntry[] - Array of navigation links
 * - themeNames?: string[] - Optional theme names for toggle
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <Nav
 *   links={[
 *     { href: "/", text: "Home" },
 *     { href: "/blog", text: "Blog" },
 *     { href: "/about", text: "About" }
 *   ]}
 *   class="my-custom-nav"
 * />
 *
 * Notes:
 * - Includes theme toggle button
 * - Responsive design with flex layout
 * - Accessible with proper ARIA labels
 * - Supports custom styling
 * - Automatically handles mobile layout
 */

import type { NavEntry } from "../../Types/types";

import ToggleTheme from "@components/Astro/ToggleTheme.astro";
import Link from "@components/Astro/Link.astro";

interface Props {
	// Array of navigation links //
	links: NavEntry[];
	// Optional theme names for the toggle //
	themeNames?: string[];
	// Optional CSS classes //
	class?: string | undefined;
}

const { links = [], class: className } = Astro.props;

const pathname = new URL(Astro.request.url).pathname;
---

<nav
	id="main-navigation"
	aria-label="Main navigation"
	class:list={["flex flex-col sm:flex-row items-center z-10 px-4 py-2", className]}
>
	<ul class="flex flex-col sm:flex-row flex-wrap items-center mb-2 sm:mb-0 sm:mr-auto">
		{
			links.map((obj) => (
				<li class="my-1 sm:my-0 sm:mb-0 sm:mr-4">
					<Link
						href={obj.href}
						class:list={["text-lg", "no-underline", "uppercase", { active: obj.href === pathname }]}
						text={obj.text}
					/>
				</li>
			))
		}
	</ul>
	<ToggleTheme class="mt-2 sm:mt-0 sm:ml-auto" />
</nav>

<style>
	nav a {
		text-decoration: none;
		transition: color 0.2s ease-in-out;
	}

	nav a:hover {
		color: var(--theme-accent);
	}

	nav a.active {
		font-weight: 700;
	}

	@media screen and (width >= 1670px) {
		#main-navigation {
			padding-left: 0;
			padding-right: 0;
		}
	}
</style>
