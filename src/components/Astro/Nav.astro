---
/* Component for rendering the main navigation with theme toggle.
...
*/

import type { NavEntry } from "../../Types/types";
import { Image } from "astro:assets";
import logo from "@assets/logo.webp";
import ToggleTheme from "@components/Astro/ToggleTheme.astro";
import Link from "@components/Astro/Link.astro";

interface Props {
	// Array of navigation links //
	links: NavEntry[];
	// Optional theme names for the toggle //
	themeNames?: string[];
	// Optional CSS classes //
	class?: string | undefined;
}

const { links = [], class: className } = Astro.props;

const pathname = new URL(Astro.request.url).pathname;
---

<nav
	id="main-navigation"
	aria-label="Main navigation"
	class:list={["relative flex items-center justify-between flex-wrap z-50 px-4 py-2 sticky top-0 bg-theme-primary", className]}
>
    <div class="block sm:hidden">
        <button id="hamburger-button" class="p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="nav-menu" aria-expanded="false">
            <span class="sr-only">Open main menu</span>
            <svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
        </button>
    </div>

    <div class="hidden sm:flex items-center flex-shrink-0">
        <a href="/" class="group flex items-center text-white hover:text-gray-300 transition-colors duration-300">
            <Image src={logo} alt="Logo" width={40} height={40} class="mr-2 transition-transform duration-300 ease-in-out group-hover:scale-110" />
            <span class="font-semibold text-xl tracking-tight">Percy Quispe</span>
        </a>
    </div>

    <div id="nav-menu" class="w-full block flex-grow sm:flex sm:items-center sm:w-auto hidden sm:!flex">
        <ul class="flex flex-col sm:flex-row items-start sm:ml-auto">
            {
                links.map((obj) => (
                    <li class="px-2 relative group">
                        <Link
                            href={obj.href}
                            class:list={["text-lg", "no-underline", { active: obj.href === pathname }]}
                            text={obj.text}
                        />
                        {obj.children && (
                            <ul class="absolute left-full top-0 w-48 bg-theme-primary rounded-md shadow-lg invisible opacity-0 group-hover:visible group-hover:opacity-100 transition-opacity">
                                {obj.children.map((child) => (
                                    <li>
                                        <Link
                                            href={child.href}
                                            class="block px-4 py-2 text-sm"
                                            text={child.text}
                                        />
                                    </li>
                                ))}
                            </ul>
                        )}
                    </li>
                ))
            }
        </ul>
    </div>

    <div class="ml-4 hidden sm:block">
        <ToggleTheme />
    </div>
</nav>

<script>
    function setupNav() {
        const hamburgerButton = document.getElementById('hamburger-button');
        const navMenu = document.getElementById('nav-menu');

        if (hamburgerButton && navMenu) {
            if (hamburgerButton.dataset.listenerAttached) {
                return;
            }

            hamburgerButton.addEventListener('click', () => {
                navMenu.classList.toggle('hidden');
                const isHidden = navMenu.classList.contains('hidden');
                hamburgerButton.setAttribute('aria-expanded', isHidden ? 'false' : 'true');
            });
            hamburgerButton.dataset.listenerAttached = 'true';
        }
    }

    setupNav();

    document.addEventListener('astro:page-load', setupNav);
</script>

<style>
	nav a {
		text-decoration: none;
		transition: color 0.2s ease-in-out;
	}

	nav a:hover {
		color: var(--theme-accent);
	}

	nav a.active {
		font-weight: 700;
	}

	@media screen and (width >= 1670px) {
		#main-navigation {
			padding-left: 0;
			padding-right: 0;
		}
	}
    .group:hover .group-hover\:block {
        display: block;
    }
</style>

<style is:global>
    #main-navigation div {
        margin: 0;
        padding: 0;
    }
    #main-navigation ul {
        margin: 0;
        padding: 0;
    }
    #main-navigation li {
        margin: 0;
        line-height: normal;
    }
    #main-navigation a {
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        display: inline-block; /* Ensures padding is applied correctly */
    }
</style>