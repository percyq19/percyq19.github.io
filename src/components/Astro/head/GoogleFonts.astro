---
import type { Font } from "../../../Types/types";

// Component for optimized Google Fonts loading with preconnect.
//
// Props:
// - fonts: Array of font configurations {
//     fontFamily: string,
//     fontWeights: number[],
//     includeItalic: boolean
//   }
//
// Example usage:
// <GoogleFonts
//   fonts={[
//     {
//       fontFamily: "Open Sans",
//       fontWeights: [300, 400, 700],
//       includeItalic: true
//     },
//     {
//       fontFamily: "Roboto Mono",
//       fontWeights: [400],
//       includeItalic: false
//     }
//   ]}
// />
//
// Notes:
// - Automatically handles font weight variations
// - Supports italic variants
// - Includes preconnect optimization
// - Uses display=swap for better performance
// - Properly encodes font family names

interface Props {
  fonts: Font[];
}

const { fonts = [] } = Astro.props;

function buildGoogleFontsUrl(fonts: Font[]) {
  const baseUrl = "https://fonts.googleapis.com/css2?";

  // Create a set to store all the unique query parameters
  const queryParams = new Set<string>();

  fonts?.forEach((font) => {
    let fontQuery = `family=${font.fontFamily.replace(/ /g, "+")}`;

    if (font.includeItalic) fontQuery += `:ital,wght@`;

    if (
      font?.fontWeights &&
      font?.fontWeights?.length > 0 &&
      !font.includeItalic
    )
      fontQuery += `:wght@${font.fontWeights.join(";")}`;

    // if ital we have to change the format of the fontWeights to match the google fonts api 0,300;0,400;1,300;1,400 etc
    if (
      font?.fontWeights &&
      font?.fontWeights?.length > 0 &&
      font.includeItalic
    ) {
      const regularWeights = font.fontWeights.map(
        (weight: any) => `0,${weight}`
      );
      const italicWeights = font.fontWeights.map(
        (weight: any) => `1,${weight}`
      );
      fontQuery += `${[...regularWeights, ...italicWeights].join(";")}`;
    }

    queryParams.add(fontQuery);
  });

  // Join all query parameters with '&' and return the full URL
  return (
    (queryParams.size ? baseUrl + Array.from(queryParams).join("&") : baseUrl) +
    "&display=swap"
  );
}
---

<!-- <link rel="preconnect" href="https://fonts.googleapis.com" /> -->
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
// @ts-ignore
<link
  rel="preload"
  href={buildGoogleFontsUrl(fonts)}
  onload="this.onload=null;this.rel='stylesheet';this.removeAttribute('as')"
  as="style"
/>
<noscript>
  <link rel="stylesheet" href={buildGoogleFontsUrl(fonts)} />
</noscript>
